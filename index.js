require('dotenv').config();
const express = require('express');
const { Telegraf } = require('telegraf');
const { serverLogger, monitorsLogger, historyLogger } = require('./utils/logger');
const { getMonitorStatus } = require('./utils/parser');
const tagsRemover = require('./helpers/tagsRemover');
const fs = require('fs');

const {
    PORT,
    BIG_MONITOR_URL,
    SMALL_MONITOR_URL,
    BOT_TOKEN
} = process.env;

if (BOT_TOKEN === undefined) {
    throw new Error('BOT_TOKEN must be provided!');
}

const app = express();

app.listen(PORT, () => {
    // server status && errors logger
    serverLogger.info(`Server Started in port : ${PORT}!`);
})

// –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
setInterval(async function () {
    await getMonitorStatus(BIG_MONITOR_URL).then(res => historyLogger.info(tagsRemover(res)));
    await getMonitorStatus(SMALL_MONITOR_URL).then(res => historyLogger.info(tagsRemover(res)));
}, 600000)

// telegram
const bot = new Telegraf(BOT_TOKEN);

bot.start((ctx) => {
    ctx.replyWithHTML(
        '\nü•≥ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∂–∏–∑–Ω—å —Ç–µ–º, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–µ –º–æ–Ω–∏—Ç–æ—Ä—ã LG Ultrafine 5k || 4k.\n' +
        '\n<b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç.</b>\n' +
        '\n–û–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ—Å—è—Ç—å –º–∏–Ω—É—Ç –±–æ—Ç –∑–∞—Ö–æ–¥–∏—Ç –Ω–∞ —Å–∞–π—Ç —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ rushop.lg.com, –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ –º–æ–¥–µ–ª–µ–π 24MD4KL-B.AEU, 27MD5KL-B.AEU –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º.\n' +
        '\n<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n' +
        '\n/status ‚Äî –£–∑–Ω–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.\n' +
        '\n/subscribe ‚Äî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ—Å—è—Ç—å –º–∏–Ω—É—Ç.\n' +
        '\n/history ‚Äî –∏—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤. <b>–í–ù–ò–ú–ê–ù–ò–ï!</b> –í—ã –ø–æ–ª—É—á–∏—Ç–µ –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ (144 –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å—É—Ç–∫–∏), –Ω–∞—á–∏–Ω–∞—è —Å 20 —Ñ–µ–≤—Ä–∞–ª—è 2022 –≥–æ–¥–∞, –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è.\n'
    );
    ctx.replyWithPhoto('https://ohuel.ru/lg/monitors.jpg');
})

bot.hears('/status', ctx => {
    ctx.reply('–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ...')

    async function checkStatus() {
        ctx.replyWithHTML(await getMonitorStatus(BIG_MONITOR_URL)).then(res => monitorsLogger.info(`${res.text}, user: ${res.chat.username}`));
        ctx.replyWithHTML(await getMonitorStatus(SMALL_MONITOR_URL)).then(res => monitorsLogger.info(`${res.text}, user: ${res.chat.username}`));
    }

    checkStatus();
})

bot.hears('/subscribe', ctx => {
    ctx.reply('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–æ–≤. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å—Ç–∞—Ç—É—Å–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ—Å—è—Ç—å –º–∏–Ω—É—Ç.');
    setInterval(async function () {
        ctx.replyWithHTML(await getMonitorStatus(BIG_MONITOR_URL)).then(res => monitorsLogger.info(`${res.text}, user: ${res.chat.username}`));
        ctx.replyWithHTML(await getMonitorStatus(SMALL_MONITOR_URL)).then(res => monitorsLogger.info(`${res.text}, user: ${res.chat.username}`));
    }, 600000)
})

bot.hears('/history', ctx => {
    try {
        const telegramMessageMaxSize = 4012; // ~ 60 —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
        const logs = fs.readFileSync('./logs/history.log', 'utf8');
        const sliced = logs.length / telegramMessageMaxSize;
        let start = 0;
        let end = telegramMessageMaxSize;

        for (let i = 0; i < sliced; i++) {
            let messageToSend = logs.slice(start, end);
            start = start + telegramMessageMaxSize;
            end = end + telegramMessageMaxSize;
            ctx.reply(messageToSend);
        }
    } catch (err) {
        ctx.reply(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤: ${err}`)
    }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));